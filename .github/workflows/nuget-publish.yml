name: Build and Publish NuGet Packages
on:
  push:
    branches: [ main ]
    tags:
      - '*'
  workflow_dispatch:
jobs:
  build-and-publish:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          6.0.x
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
      with:
        nuget-version: '6.x'
    - name: Determine version
      id: get_version
      shell: pwsh
      run: |
        $buildPath = "RevitMCPSDK/build.ps1"
        $baseVersion = "beta"
        
        if (Test-Path $buildPath) {
          try {
            $content = Get-Content -Path $buildPath -Raw
            if ($content -match '\$baseVersion\s*=\s*"([^"]+)"') {
              $baseVersion = $matches[1]
              echo "Found baseVersion: $baseVersion in file"
            } else {
              echo "Pattern not found in file, using default"
            }
          } catch {
            echo "Error reading file: $_"
          }
        }
        
        $tagName = "${{ github.ref }}"
        if ($tagName -match 'refs/tags/v?(.+)') {
          $baseVersion = $matches[1]
          echo "Using tag version: $baseVersion"
        }
        
        echo "BASE_VERSION=$baseVersion" >> $env:GITHUB_ENV
        echo "BUILD_PATH=$buildPath" >> $env:GITHUB_ENV
    - name: Build NuGet packages
      shell: pwsh
      run: |
        $buildPath = "${{ env.BUILD_PATH }}"
        $baseVersion = "${{ env.BASE_VERSION }}"
        
        if (Test-Path $buildPath) {
          if ("${{ github.ref }}" -match 'refs/tags/') {
            try {
              echo "Using version $baseVersion from tag"
              $content = Get-Content -Path $buildPath -Raw
              $updatedContent = $content -replace '(\$baseVersion\s*=\s*")[^"]+(")','$1' + $baseVersion + '$2'
              Set-Content -Path $buildPath -Value $updatedContent -Encoding UTF8
            } catch {
              echo "Error updating file: $_"
              cat $buildPath
            }
          }
          
          cd (Split-Path -Path $buildPath)
          ./build.ps1
        } else {
          Write-Error "Cannot find build script at $buildPath"
          exit 1
        }
    
    - name: Publish to NuGet.org
      if: startsWith(github.ref, 'refs/tags/')
      shell: pwsh
      run: |
        $nupkgPath = "RevitMCPSDK/nupkg"
        if (!(Test-Path $nupkgPath)) {
          $nupkgPath = "./nupkg"
        }
        
        if (Test-Path $nupkgPath) {
          foreach ($nupkg in Get-ChildItem -Path "$nupkgPath/*.nupkg") {
            echo "Publishing $nupkg to NuGet.org"
            nuget push "$nupkg" "${{ secrets.NUGET_API_KEY }}" -src "https://api.nuget.org/v3/index.json" -SkipDuplicate
          }
        } else {
          Write-Error "Cannot find NuGet packages"
          exit 1
        }
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: RevitMCPSDK/nupkg/*.nupkg
        name: RevitMCPSDK ${{ env.BASE_VERSION }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}